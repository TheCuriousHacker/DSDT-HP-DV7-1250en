# ----------------------------
# 16-bit registers
# ----------------------------

# ERIB Declaration
into device label EC code_regex ERIB,\s+16 replace_matched begin RIB0,8,RIB1,8 end;


# ----------------------------
# Fix 16-bit methods
# ----------------------------

# ERIB Store calls
into method label FANG code_regex Store\s+\(Arg0,\s+ERIB\) replaceall_matched begin Store (Arg0, RIB0)\nStore (ShiftRight(Arg0,8), RIB1) end;
into method label FANW code_regex Store\s+\(Arg0,\s+ERIB\) replaceall_matched begin Store (Arg0, RIB0)\nStore (ShiftRight(Arg0,8), RIB1) end;


# ----------------------------
# Deal with buffer fields
# ----------------------------

# BMFN Declaration
into device label EC code_regex (BMFN,)\s+(72) replace_matched begin BMFX,%2 end;

# BMFN Store call
into method label BATT code_regex BMFN, replaceall_matched begin RECB(0x90,72), end;

# BMFN
#into method label BATT code_regex \(\^\^PCI0\.LPC\.EC\.BMFN, replaceall_matched begin (^^PCI0.LPC.EC.RECB(0x10,72), end;


# Utility methods to read/write buffers from/to EC
into method label RE1B parent_label EC remove_entry;
into method label RECB parent_label EC  remove_entry;
into device label EC insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;
